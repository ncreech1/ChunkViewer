%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (gold_ore.eps)
%%CreationDate: (2021-09-18T16:32:03-04:00)
%%BoundingBox: -0 -0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12
16 16
0
0
8F8F8F8F8F8F8F8F8F8F8F8F7474747474747474747F7F7F7474746868687474747474747F7F7F
7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7474747F7F7F9C70207F7F7F7F7F7F6868687F7F7F7F7F7F
7F7F7F6868686868685C5C5C7F7F7F7474747F7F7F7474746868686868688F8F8F6868685C5C5C
9C70206868687474747474745C5C5C5C5C5C9C70209C70207F7F7F7F7F7F8F8F8F8F8F8F7F7F7F
6868685C5C5C9C7020EB9D0E9C70207474747F7F7F5C5C5C9C7020EB9D0E9C7020747474747474
7F7F7F7F7F7F6868685C5C5C9C7020EB9D0EFCEE4B9C70206868688F8F8F8F8F8FEB9D0EEB9D0E
A2A2A27F7F7F7F7F7F8F8F8F7F7F7F686868EB9D0EFCEE4BFCEE4BFFFFB5EB9D0E747474747474
686868A2A2A2A2A2A27474748F8F8F7474747F7F7F7F7F7F8F8F8FA2A2A2EB9D0EFCEE4BEB9D0E
9C7020A2A2A27474747474747F7F7F7F7F7F7F7F7F7F7F7F747474747474686868686868747474
A2A2A2EB9D0EA2A2A2A2A2A27F7F7F747474747474747474EB9D0E9C70207F7F7F8F8F8F686868
9C7020EB9D0E8F8F8FA2A2A29C7020A2A2A28F8F8F8F8F8F7F7F7F7F7F7F6868687F7F7F7F7F7F
7474747F7F7F747474EB9D0EFCEE4BA2A2A27F7F7FA2A2A28F8F8F8F8F8F7F7F7F5C5C5C5C5C5C
5C5C5C6868688F8F8F7F7F7F6868688F8F8FA2A2A2A2A2A28F8F8F747474686868686868747474
5C5C5C9C70209C7020EB9D0E6868686868687474747F7F7F7F7F7F6868686868686868688F8F8F
8F8F8F7F7F7F6868689C7020EB9D0EEB9D0EFFFFB5FCEE4B9C70206868687F7F7F7474749C7020
9C7020EB9D0E7474747F7F7F9C7020747474A2A2A2EB9D0EFCEE4BFCEE4BA2A2A2A2A2A2747474
8F8F8F9C7020EB9D0EFCEE4BFFFFB5FCEE4B8F8F8FA2A2A27474747F7F7F9C7020EB9D0EA2A2A2
7474747474748F8F8F7F7F7F747474A2A2A2EB9D0EFCEE4B8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F
A2A2A2A2A2A28F8F8F8F8F8FEB9D0E8F8F8F7F7F7F7F7F7F7F7F7F8F8F8FA2A2A27F7F7F747474
7474747F7F7F8F8F8F8F8F8F7F7F7F7F7F7F7474747F7F7F7F7F7F

end
%%PageTrailer
%%Trailer
%%EOF
