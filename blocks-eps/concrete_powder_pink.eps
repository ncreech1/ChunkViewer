%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (concrete_powder_pink.eps)
%%CreationDate: (2021-09-18T16:32:01-04:00)
%%BoundingBox: -0 -0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12
16 16
0
0
DF92ACE695B3E693B3E390AEE590B0DD85A8E395B0E18DABEBA4BDE594B1E494B1ECC1D1DD85A8
ED94B8E3A4BAE393B0E594B2E69BB5E490B0EEAAC3E0A2B8DD8AA8E69FB7E499B2EB9BBAE692B2
F29DC0E89CB6E18BACD87EA3E594B2EEB1C7EDAAC2F1CBDBEE9ABBD87EA2E292B0E8A2BAE491B0
EAA6BDEAB8CAE695B3EEA7C1EDA2BDE9BCCED884A4E59AB4F4B8CEE295B0E79EB7DC84A6E492B0
E395B1EBACC4DC89A8E799B5D892A9E18DABE18CACE89BB7E692B2EEABC3E595B2DC8EA8EBA3BC
E290ACEB9DBAE290AEEA99B7EDA5BFE794B4EFAEC5E6A3BADB86A6E6A6BCE794B3DC85A7DF97AF
E185ACD986A5E4A5BBE593B1E5A3BAF7ABC9E291AEEEABC4EBC4D4E89BB6DB85A6F1AFC6EAA6BE
CE7699E5A1B8E6ABC1E69AB5DD92ABCD7799DC83A8DF8EAAEAA9BFD37F9FDE84A8DC85A7DF8CA9
DC85A7E08CAAEFB4C9F6B6CEE18CABEEABC3E99FB8DB82A6DD86A8DF8AA9EA9CB8E89FB8E79BB6
D87FA3EDA9C2F4CDDCEBB3C7E6A6BCE08CAAD982A4E594B2E693B2F3B2CBE691B1EBA4BDE088AA
F0AAC4E897B5ECBDCEE291AEEFAEC5EDC5D4DF8BAAF7D1E0DD92ABE89BB6E08DACDF89AAE28DAE
DF89A9DF9CB3E69CB5E288AAE597B3E08CAAE18BABE6A3BADF8DAAE598B4DF88A9DF86A9EFA5C1
E8A1B9E48EAFE8A1B9EDA2BDE593B2EA9EB9C97897ECA2BCDE91ABE388AEE8A6BCE490AFE489AE
E891B3E48EAFE494B0EAABC2F6A7C5E79EB7E595B1E499B3EDA5BFEDBFD0DE8EA9EBABC3E8A2BA
EBC4D3E292B0DF89AAE89EB8E597B2F09EBEE6A8BEE6AABFDF8DAADD9DB3E48BAFE594B1E08EAB
F0AFC6E28CACE69EB7EA9DB8DC93AAE29FB7EAA6BEE9A5BCDF8DAAECBCCEEEACC4E192AEE8AFC3
DF85A9EEABC3DA85A5D78BA5DC88A7E395B0E599B2F1A5C1E088AAEA93B6EEBED0E695B3DD83A8
D87FA3E895B5DA82A5EDA9C1EAAAC2E291AEE49CB5DF85A8E8A5BBDF88AAE99CB8E094AEE28BAB
DD9FB4E69CB6EEB0C6E4ABC0E6B2C5E899B5DD88A8EAA1BAE393AFDC90A9ED93B8DD85A8DF93AC
F1C3D4EAA3BBEFA2BFE190ACEBBECEE799B5DC83A8E79EB7D580A1

end
%%PageTrailer
%%Trailer
%%EOF
