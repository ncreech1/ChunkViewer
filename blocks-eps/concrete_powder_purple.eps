%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (concrete_powder_purple.eps)
%%CreationDate: (2021-09-18T16:32:01-04:00)
%%BoundingBox: -0 -0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12
16 16
0
0
7E36A98437B38A3AB77E34AE8236B28437B28036AC8036AF8036B18437B28B3DB57E34AF8839B3
8D3BBF7930A67F34AF8237B08539B28A3AB78437B57832A47832A87932A8893AB38839B78337B4
8B3ABF8337B28539B37D33AC8337B18437B58337B38036B48437B77E33AB863AB28034AE8D3EB8
8437B18036B08A3AB7903EBB8C3DBA8337B17932A87A32A98B3BBC9343BA9342BB7C33AC7C33AC
7C33A98439B2893BB37E34AF6F2D9B8D3DB57F34AF7A33AE8337B4883AB67D33AC7430A3883AB5
7930A97F34B28C3DB47E34B18D3DBA9A45C28537B57A32A98036AC7630A78337B48237B07C33A6
8C3BBB8C3DB48034AC9241BC7A33A88E3BC37932A9883AB78639B48E3EB97930AA9742C17F36AF
7A33A77E34AA883AB28036AF7933A57330A19945C17933A88036AF7932A58B3AB78439B17830A8
7930AA7830A97E33B18B3ABD8537B27D33AF7932AB7F34AF762FA8863AB29742BF8539B2883AB4
7832A89542BF8C3BBC8036B0883AB28E3EB6893AB39946C18D3BB8883ABA8539B58036B18D3DB8
7E34B28539B57E36AF8337AF893AB77D34AE7D32AB8A3ABD7C34A7893AB47A32AA8639B48236B0
7F34AF8A3EB38437B1883AB6903FBA7C33AC8439B28236AE7C33AA8036B07D34AE8036B08A3AB9
8036AF9442BE893BB48639B68639B37F36B07D36A37D33B0742FA38939B78D3DB77E34AE8036B4
8237B58036B27A32A97D33ABA248CD893AB37E34AE7F34AB9341BD8A3BB87830A68E3EB8893AB3
9A48C28236AF7C33AC9441BC8C3DB78537B98436AF8E3FB7903FB78037A88C3BBA8839B48537B0
8637B68839B48436AF8539B48339AB722FA27C33AC8337B08236AE7A33AC893BB77C33AA8E3EB6
7C33AC7C33AF893BB3722F9E9545BC913FB87730A8A149C98D3BB88839B8883AB68237B18237B2
8539B1863AB68C3DB57F36B17932AB8034AE7A33A98B3BB7893AB48437B2903EBA7630A4913FBB
7F36A78E3EB68E3DBA7A32A88236AE8036B1883AB38E3DBA7D33AB742FA2903BC17D33AE8236AC
9441C0903FBA8437B68539B08537B28C3BB78337B17A32AA7C33A7

end
%%PageTrailer
%%Trailer
%%EOF
