%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (frosted_ice_3.eps)
%%CreationDate: (2021-09-18T16:32:02-04:00)
%%BoundingBox: -0 -0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12
16 16
0
0
80ADFB80ADFB80ADFB80ADFB92B9FECEE0FFA1C3FF92B9FE92B9FE80ADFB80ADFB80ADFBA1C3FF
A1C3FFA1C3FF80ADFB80ADFB80ADFB74A6FB77A9FDA1C3FFA1C3FF92B9FE92B9FE74A6FB80ADFB
80ADFB77A9FDA1C3FF92B9FE80ADFB80ADFB80ADFB80ADFB92B9FE7AABFD92B9FE92B9FE92B9FE
77A9FD9DC0FE80ADFB92B9FE7AABFD92B9FE80ADFB80ADFB74A6FB92B9FE92B9FE80ADFB92B9FE
77A9FD77A9FD92B9FE77A9FD80ADFB92B9FE92B9FE77A9FD74A6FB80ADFB74A6FB9ABEFE92B9FE
80ADFB80ADFB80ADFB92B9FE9DC0FE77A9FD9ABEFE80ADFB80ADFB74A6FB9ABEFE8EB6FD80ADFB
77A9FD92B9FE80ADFB74A6FB74A6FB92B9FE92B9FE77A9FD80ADFB6197F370A4FC80ADFB6499F3
92B9FE92B9FE77A9FDA1C3FFA1C3FF80ADFB8EB6FD77A9FD77A9FD74A6FB9ABEFE70A4FC6197F3
80ADFB6499F39DC0FE92B9FE6A9DF4A1C3FF92B9FE80ADFB80ADFB80ADFB8EB6FD9ABEFE6499F3
80ADFB80ADFB9ABEFE6499F39DC0FE679BF36A9DF4ABC9FF7AABFD92B9FE80ADFB80ADFB92B9FE
92B9FE80ADFB9ABEFE679BF36499F380ADFB6499F36499F3A1C3FF9FC1FFA1C3FF9DC0FE92B9FE
80ADFB92B9FE77A9FD92B9FE92B9FE92B9FE92B9FE9ABEFE6499F39ABEFE96BCFF72A2F4A1C3FF
92B9FE77A9FD74A6FB80ADFB92B9FE9DC0FE77A9FD7AABFD92B9FE6499F36499F39ABEFE92B9FE
A1C3FF9DC0FE679BF377A9FD9ABEFE8EB6FD92B9FE92B9FEA1C3FFA1C3FF77A9FD6499F39ABEFE
8EB6FD679BF3A1C3FF92B9FE74A6FB9DC0FE77A9FD80ADFB80ADFB92B9FEA1C3FFA1C3FF77A9FD
9ABEFE74A6FB70A4FC80ADFB9DC0FE74A6FB74A6FB80ADFB77A9FD9ABEFE74A6FB92B9FE92B9FE
C8DCFF7AABFD9ABEFE80ADFB70A4FC70A4FC80ADFB80ADFB74A6FB9DC0FE80ADFB74A6FB80ADFB
77A9FD92B9FE92B9FEA1C3FF9ABEFE80ADFB70A4FC97BCFE74A6FB80ADFB92B9FEA1C3FF77A9FD
80ADFB8EB6FD80ADFB9ABEFE7AABFDC8DCFF80ADFB80ADFB80ADFB80ADFB80ADFB92B9FECEE0FF
A1C3FF92B9FE9ABEFE74A6FB80ADFB80ADFBA1C3FF9FC1FFA1C3FF

end
%%PageTrailer
%%Trailer
%%EOF
