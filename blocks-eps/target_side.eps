%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (target_side.eps)
%%CreationDate: (2021-09-18T16:32:06-04:00)
%%BoundingBox: -0 -0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12
16 16
0
0
EBD7BAF7F2EBEFE2D0F7F2EBEBD7BAFEFEFDEFE2D0F7F2EBEFE2D0F7F2EBF3EBDFF7F2EBEFE2D0
F7F2EBF3EBDFFEFEFDEFE2D0D53535C82F2FD53535C82F2FDC4A4AC82F2FD53535A43434B93232
C82F2FD53535B93232DC4A4AC82F2FF3EBDFEBD7BAC82F2FF3EBDFFEFEFDEBD7BAF7F2EBEFE2D0
F3EBDFEBD7BAF7F2EBEFE2D0F3EBDFEBD7BAF7F2EBB93232F7F2EBEFE2D0D53535EFE2D0FEFEFD
EFE2D0FEFEFDEFE2D0F7F2EBEFE2D0FEFEFDEFE2D0F7F2EBEBD7BAFEFEFDB93232F7F2EBEFE2D0
B93232EFE2D0F7F2EBA43434DC4A4AB93232C82F2FB93232D53535A43434D53535EFE2D0FEFEFD
C82F2FEFE2D0EFE2D0D53535F3EBDFF7F2EBB93232F7F2EBEFE2D0FEFEFDF3EBDFF3EBDFEFE2D0
DC4A4AEFE2D0FEFEFDA43434F3EBDFF3EBDFD53535F3EBDFFEFEFDB93232F7F2EBEFE2D0FEFEFD
F3EBDFF7F2EBF3EBDFDC4A4AF3EBDFF7F2EBC82F2FF7F2EBF3EBDFD53535F3EBDFFEFEFDC82F2F
FEFEFDEFE2D0D53535B93232FEFEFDF3EBDFD53535F3EBDFFEFEFDB93232FEFEFDF3EBDFDC4A4A
F3EBDFFEFEFDC82F2FFEFEFDF3EBDFDC4A4AB93232F7F2EBF3EBDFDC4A4AF3EBDFFEFEFDB93232
FEFEFDF3EBDFDC4A4AEFE2D0FEFEFDC82F2FFEFEFDF3EBDFFEFEFDF3EBDFFEFEFDF3EBDFDC4A4A
F3EBDFFEFEFDC82F2FF7F2EBEBD7BADC4A4AEFE2D0F7F2EBB93232F7F2EBEFE2D0F7F2EBF3EBDF
FEFEFDEFE2D0D53535EBD7BAF7F2EBB93232F7F2EBEFE2D0D53535EBD7BAF7F2EBB93232DC4A4A
B93232DC4A4AB93232DC4A4AB93232D53535EFE2D0FEFEFDC82F2FF3EBDFEBD7BAB93232EFE2D0
FEFEFDEFE2D0F7F2EBEBD7BAFEFEFDEFE2D0F7F2EBEFE2D0F3EBDFEFE2D0F3EBDFC82F2FEFE2D0
EBD7BAB93232EBD7BAFEFEFDEFE2D0F3EBDFEFE2D0F3EBDFEFE2D0F3EBDFEBD7BAEFE2D0EBD7BA
EFE2D0C82F2FF3EBDFEFE2D0D53535A43434B93232C82F2FD53535A43434D53535C82F2FD53535
C82F2FB93232A43434B93232A43434FEFEFDEBD7BAF3EBDFEFE2D0F7F2EBEBD7BAFEFEFDEFE2D0
F7F2EBEBD7BAFEFEFDF3EBDFFEFEFDEFE2D0FEFEFDEFE2D0FEFEFD

end
%%PageTrailer
%%Trailer
%%EOF
