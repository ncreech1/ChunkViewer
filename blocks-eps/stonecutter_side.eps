%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (stonecutter_side.eps)
%%CreationDate: (2021-09-18T16:32:05-04:00)
%%BoundingBox: -0 -0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12
16 16
0
0
3838383535353535353333333030302F2F2F2D2D2D2D2D2D2424243B3B3B3838383535352D2D2D
2727273636363232323838386C6C6C5A5A5A6161614747475757577272727272724E4E4ECED6D6
5B5B5B6161615454544545455656563232322929295252527878785555556262628F8F8F8F8F8F
6767675C5C5CCED6D6B6BDBD696969CED6D66666665050503030302D2D2D5050505C5C5C6F6F6F
9898986767676E6E6ECED6D6B6BDBDCED6D6B6BDBDCED6D6B6BDBD7070705E5E5E292929383838
7272727878784D4D4D6464647B7B7B7B7B7B5B5B5BCED6D6B6BDBDB6BDBDB6BDBDCED6D6CED6D6
CED6D62424242B2B2B4444445A5A5A9684748D7B6B595959545454B6BDBDB6BDBDB6BDBD7C7C7C
B6BDBDB6BDBDB6BDBD3838382424242C2C2CB8B8B8B8B8B8B8B8B8BBBBBBAFAFAFA0A0A0CED6D6
CED6D6B6BDBDB6BDBDB6BDBDCED6D66E6E6E6161612323232A2A2AB8B8B8A6A6A6A0A0A0969696
9696969696964A4A4AB6BDBDCED6D6B6BDBDCED6D6B6BDBDCED6D65252523A3A3A2F2F2F373737
565656806E5E806E5E565656555555757575CED6D6606060B6BDBDCED6D65E5E5E575757787878
3B3B3B4B4B4B8E8E8E858585988676776555767676CDCDCDCDCDCD8C8C8CCDCDCD909090CED6D6
8E8E8EC5C5C58E8E8E3F3F3F4B4B4B797979787878988676776555707070B0B0B0B0B0B0A3A3A3
B0B0B0B0B0B08383839D9D9DA8A8A87979793030304B4B4B7F7F7F7373738775657765556D6D6D
A8A8A8B0B0B0A8A8A8A8A8A8A3A3A3A3A3A3A3A3A3A3A3A37676763232324B4B4B7F7F7F959595
7070707070708D8D8DA3A3A3A3A3A3A3A3A3A3A3A3B0B0B0B0B0B0B0B0B0B0B0B07F7F7F2D2D2D
4A4A4A767676A8A8A8A8A8A8A8A8A8A3A3A3A3A3A3A3A3A3A8A8A89D9D9DA8A8A8A8A8A8A3A3A3
A3A3A37171713232324D4D4D7F7F7F7979797979797979797676767F7F7F7F7F7F797979797979
7979797979797F7F7F7F7F7F7F7F7F2D2D2D3F3F3F323232323232303030303030303030303030
3030303030302D2D2D303030303030303030303030323232323232

end
%%PageTrailer
%%Trailer
%%EOF
