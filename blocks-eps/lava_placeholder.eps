%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (lava_placeholder.eps)
%%CreationDate: (2021-09-18T16:32:03-04:00)
%%BoundingBox: -0 -0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12
16 16
0
0
C83906CE4209DA6918ECB943FBE467EBAF3DFCFC7FFCFC7FFCFC7FEBAC3BF7DB5DF9F577F6DB60
EB9D36CD4309C83906CE4809C83906D0550EFBE467FBFD7DEBAF3DFCFC7FFCFC7FFBF97DEEBF49
F9F577F9F577EB9D36DA6917D25309CD4309E08827D45811C83906DC6A1BEBB848E49A30E38421
F3D35FFAF478E9A939E6992BEBB949DB6918D4540BD4540BCC510AEAA336D96414D45811D3510E
DC6A1BD86F19D45810D96C1AE39D44DA761FD1530EE2982EE2982EE2982EE2982EE5862CDA6B18
DA6B18D86C17D86C17CF4C0BC83906D86F19D45810D66618CE490ADD771AD87717D87717DE7A1C
E5862CE79D30CB3F07D45C11D66715D66715D96D16DC751BE79D32E27B1FD14F10C83906DC7E20
E29429D2530FD2530FD55911DA6619C83906C63906CB4208D46012D96D16D86514F0C851EBB13F
D4590EE68623EBC24BDC7E20C83906CD430CCE4F0CCB4108C93A07C93A07C63906D46012E9AC39
F0C851F3D45BE69228DD630FE68623E68623C73C07C83906C83906C83906C83906CB4307CB4009
CA3D07D76817FBEC72FFFC7CE79C2FDA6A1BC83906CC4507CC4507CC4507CD4108CD4108D04D0A
D04D0AD46312CA3D07D14E0FD45D12E9AC39E79C30D45C11CE4F0DCE4308C93C07CF4F0DCE4A0D
D1500CD1500CD45811D1530FDC761BD46312E9A636EFC049ECBA47D45C11C83906D66B22CE4B0E
D6661CD76A1BD35B11DC771EDC771EC83906D36012DC8022E38C27E9A636E89E32D04B0ACA3D07
E08D36D76B23D66418E18D2FE39537DA761ADE7E22E18A24D66915D66915DC8022E08723DD7D1F
DF8423D04B0AD66B22EDBF55CC4509D35F13D86716DD771CE5902ADA761AE18A24E18A24D45814
D04D0FD46014E9962FE9962FD46015EDBF55F6E36CD96F18D66514D86716ECB13FF3DE63ECB13F
EAA43BD66913CA3C08C22B04D04D0FDE761AECB43EE4972EF1CB59FAF175FCFC7FEEBD47E79D34
EDC14AF3DE63F1D157ECB13FD04A0BC32E03C83906CA4205DE761AF1CB53F5DC60E48226FBF77B
FAF377FCFC7FEDC14AE79D34EDC14AF3DE63ECB13FD04A0BC32E03

end
%%PageTrailer
%%Trailer
%%EOF
