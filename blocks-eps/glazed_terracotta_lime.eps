%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (glazed_terracotta_lime.eps)
%%CreationDate: (2021-09-18T16:32:03-04:00)
%%BoundingBox: -0 -0 16 16
%%HiResBoundingBox: 0 0 16 16
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 16 16
userdict begin
DisplayImage
0 0
16 16
12
16 16
0
0
80C71FFFEC9DAAE9655EA9185EA9185EA9185EA9185EA9185EA9185EA9185EA91859A01759A017
F2B015FFF3C480C71FFFEC9DF2B01559A01780C71FAAE965AAE965AAE965AAE965AAE965AAE965
AAE965AAE96559A017EEAA0DFFEC9DFFEC9DAAE96559A01759A0175EA91880C71F85CF2185CF21
85CF21AAE96585CF21AAE96580C71FAAE965EEAA0DFFF3C4F2B0155EA91880C71F5EA9185EA918
5EA91885CF218BD92285CF2185CF2185CF21AAE96580C71FAAE965EEAA0DFFF3C4F2B0155EA918
AAE96580C71F5EA9185EA9185EA91885CF2185CF2185CF218BD92280C71F80C71F59A017F2B015
FFEC9DEEAA0D5EA918AAE96580C71F85CF215EA9185EA91859A017EEAA0DEEAA0D80C71F80C71F
59A017F2B015FFEC9DF2B01559A0175EA918AAE96580C71F85CF2185CF2159A017F2B015FFEC9D
FFEC9DEEAA0D59A01759A017F2B015FFEC9DF2B01580C71F5EA918AAE96585CF2180C71F8BD922
F2B015FFF3C47FCC197FCC19FFEC9DF2B015F3B625FFEC9DF2B01559A01780C71F5EA918AAE965
AAE96580C71F85CF21F3B625FFEC9D7FCC197FCC197FCC19FFEC9DFFEC9DF2B01559A01780C71F
AAE9655EA918AAE96580C71F80C71F85CF2185CF21F2B015FFF3C47FCC197FCC19F2B015F2B015
59A01780C71F80C71FAAE9655EA918AAE965AAE965AAE96585CF2185CF2159A017F2B015FFEC9D
F2B01559A01759A01780C71F80C71F80C71FAAE96559A017AAE96585CF2180C71F85CF2159A017
59A017F2B015FFEC9DF2B01559A01759A01785CF218BD92280C71F80C71F59A01759A017AAE965
AAE96559A017F2B015F2B015FFEC9DF2B01559A01780C71F80C71FAAE965AAE96580C71F59A017
F2B015EEAA0DEEAA0DF3B625F2B015FFEC9DFFF3C4F2B01559A01780C71F85CF218BD922AAE965
AAE96559A017F3B625FFEC9DFFF3C4FFF3C4FFF3C4FFEC9DF2B015F2B01559A01780C71F80C71F
85CF2185CF2180C71F59A017F3B625FFEC9D80C71FFFEC9DF2B015EEAA0DF3B62559A01780C71F
80C71FAAE965AAE965AAE96580C71F59A017F2B015FFF3C480C71F

end
%%PageTrailer
%%Trailer
%%EOF
